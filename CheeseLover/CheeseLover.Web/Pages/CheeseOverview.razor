@using CheeseLover.Shared.Enums
@using CheeseLover.Shared.Models
@using CheeseLover.Web.Components
@using CheeseLover.Web.Services
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@page "/"

@if (Cheeses == null)
{
    <p><em>Loading ...</em></p>
}
else{
    <section id="menu" class="menu">
        <div class="container" data-aos="fade-up">

          <div class="section-header">
            <p>Check Our <span>Cheeseee Menu</span></p>
             <a class="btn-book-a-table" @onclick="() => AddCheese()">Add cheese</a>
          </div>

          <ul class="nav nav-tabs d-flex justify-content-center" data-aos="fade-up" data-aos-delay="200">
            @foreach(var cheeseType in CheeseTypes)
            {
                <li class="nav-item">
                    <a class="nav-link @GetClassType(cheeseType)" data-bs-toggle="tab" data-bs-target="#@cheeseType">
                    <h4>@cheeseType</h4>
                    </a>
                </li>
            }
          </ul>

          <div class="tab-content" data-aos="fade-up" data-aos-delay="300">

                @foreach (var cheeseType in CheeseTypes)
                {
                    <div class="tab-pane fade @GetClassType(cheeseType)" id="@cheeseType">

                        <div class="tab-header text-center">
                            <h3>@cheeseType</h3>
                        </div>
    
                        <div class="row gy-5">
    
                            @foreach(var cheese in Cheeses.Where(x=>x.Category == cheeseType))
                            {
                                <div @onclick="() => NavigateToProductDetails(cheese.Id)" class="col-lg-4 menu-item">
                                   <img style="width: 500px; height: 200px;" src="@cheese.PictureUrl" class="menu-img img-fluid" alt="">
                                    <h4>@cheese.Name</h4>
                                    <p class="ingredients">
                                        @cheese.Description
                                    </p>
                                    <p class="price">
                                        $@cheese.Price
                                    </p>
                                </div>
                            }
                        </div>
                    </div> 
                }       
          </div>

        </div>
      </section>

  }
  <CheeseLover.Web.Components.AddCheese @ref="AddCheeseDialog" CloseEventCallback="@AddCheeseDialog_OnDialogClose"></CheeseLover.Web.Components.AddCheese>

@code {
    [Inject]
    public CheeseService CheeseService { get; set; }
    [Inject]
    public CartService CartService { get; set; }
    public List<Cheese> Cheeses { get; set; }
    private List<CheeseType> CheeseTypes { get; set; }
    protected AddCheese AddCheeseDialog { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Cheeses = (await CheeseService.GetAll()).ToList();
        CheeseTypes = Cheeses.Select(x => x.Category).Distinct().ToList();
        await SetCart();
    }

    private string GetClassType(CheeseType type)
    {
        return CheeseTypes.FirstOrDefault() == type ? "active show" : String.Empty;
    }
    private void NavigateToProductDetails(int cheeseId)
    {
        NavigationManager.NavigateTo($"cheese/{cheeseId}");
    }

    private async Task SetCart()
    {
        var localStorageCartId = await localStorage.GetItemAsync<string>("cartId");
        if(localStorageCartId == null)
        {
            var cartId = await CartService.CreateCart();
            await localStorage.SetItemAsync("cartId", cartId);
        }
    }
    private void AddCheese()
    {
        AddCheeseDialog.Show();
    }

    public async Task AddCheeseDialog_OnDialogClose()
    {
        Cheeses = (await CheeseService.GetAll()).ToList();
    }
}
