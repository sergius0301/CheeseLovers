@using CheeseLover.Shared.Enums
@using CheeseLover.Shared.Models
@using CheeseLover.Web.Services
@page "/"
<h3>CheeseOverview</h3>
@if (Cheeses == null)
{
    <p><em>Loading ...</em></p>
}
else{
    <!-- ======= Menu Section ======= -->
    <section id="menu" class="menu">
        <div class="container" data-aos="fade-up">

          <div class="section-header">
            <h2>Our Menu</h2>
            <p>Check Our <span>Cheeseee Menu</span></p>
          </div>

          <ul class="nav nav-tabs d-flex justify-content-center" data-aos="fade-up" data-aos-delay="200">
            @foreach(var cheeseType in CheeseTypes)
            {
                <li class="nav-item">
                    <a class="nav-link @GetClassType(cheeseType)" data-bs-toggle="tab" data-bs-target="#@cheeseType">
                    <h4>@cheeseType</h4>
                    </a>
                </li>
            }
          </ul>

          <div class="tab-content" data-aos="fade-up" data-aos-delay="300">

                @foreach (var cheeseType in CheeseTypes)
                {
                    <div class="tab-pane fade @GetClassType(cheeseType)" id="@cheeseType">

                        <div class="tab-header text-center">
                            <h3>@cheeseType</h3>
                        </div>
    
                        <div class="row gy-5">
    
                            @foreach(var cheese in Cheeses.Where(x=>x.Category == cheeseType))
                            {
                                <div class="col-lg-4 menu-item">
                                    <a href="assets/img/menu/menu-item-1.png" class="glightbox"><img src="assets/img/menu/menu-item-1.png" class="menu-img img-fluid" alt=""></a>
                                    <h4>@cheese.Name</h4>
                                    <p class="ingredients">
                                        @cheese.Description
                                    </p>
                                    <p class="price">
                                        $@cheese.Price
                                    </p>
                                </div>
                            }
                        </div>
                    </div> 
                }       
          </div>

        </div>
      </section>

  }
@code {
    public List<Cheese> Cheeses { get; set; }
    private List<CheeseType> CheeseTypes { get; set; }

    [Inject]
    public CheeseService CheeseService { get; set; }

    protected override async Task OnInitializedAsync()
    {

        Cheeses = (await CheeseService.GetAll()).ToList();
        CheeseTypes = Cheeses.Select(x => x.Category).Distinct().ToList();
    }

    private string GetClassType(CheeseType type)
    {
        return CheeseTypes.FirstOrDefault() == type ? "active show" : String.Empty;
    }
}
