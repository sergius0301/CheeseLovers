@using CheeseLover.Shared.Models
@using CheeseLover.Web.Services

@if (ShowDialog)
{
    if(Cart != null)
    {
        <div style="overflow-y: scroll" class="modal fade show d-block" id="exampleModal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button @onclick="Close" type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">

                       <div class="order-md-last">
                          <h4 class="d-flex justify-content-between align-items-center mb-3">
                            <span class="text-primary">Your cart</span>
                            <span class="badge bg-primary rounded-pill">@Cart.CartItems.Count</span>
                          </h4>
                          <ul class="list-group mb-3">
                            @foreach(var item in Cart.CartItems)
                            {
                              <li class="list-group-item d-flex justify-content-between lh-sm">
                                <div>
                                  <h6 class="my-0">@item.Cheese.Name</h6>
                                  <small class="text-muted">@item.Quantity kg</small>
                                </div>
                                <span class="text-muted">$@item.Cheese.Price/Kg</span>
                              </li>
                
                            }
                            <li class="list-group-item d-flex justify-content-between">
                              <span>Total (AUD)</span>
                              <strong>@Cart.TotalPrice</strong>
                            </li>
                          </ul>

                          <form class="card p-2">
                            <div class="input-group">
                              <button @onclick="Close" type="button" class="btn btn-secondary">Close</button>
                            </div>
                          </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public EventCallback<bool> CloseEventCallback { get; set; }
    [Inject]
    public CartService CartService { get; set; }

    public bool ShowDialog { get; set; }
    public string CartId { get; set; }
    public Cart Cart { get; set; }
    
    public async Task Show()
    {
        Cart = await CartService.GetCartById(CartId);

        ShowDialog = true;
        StateHasChanged();
    }

    public void Close()
    {
        ShowDialog = false;
        StateHasChanged();
    }
}
